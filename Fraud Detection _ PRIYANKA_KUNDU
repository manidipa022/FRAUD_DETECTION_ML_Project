{"cells":[{"cell_type":"markdown","metadata":{"id":"ZrVuMqlBDp2S"},"source":["# **Project Name - Fraud Detection**:\n","\n","**Project type** - Supervised Classification\n","\n","**Contribution** - Individual\n","\n","**Member** - PRIYANKA KUNDU"]},{"cell_type":"markdown","metadata":{"id":"Yy1HpYvwJI6W"},"source":["# **Project Summary**\n","\n","\n","This project aims to build a machine learning model to predict the fraud detection.\n","\n","**Summary**\n","\n","**Problem:** Classifying credit card transactions as fraudulent or non-fraudulent.\n","\n","**Data:** Anonymized dataset with credit card transaction data.\n","\n","**EDA Insights :**\n","The dataset is highly imbalanced, with far fewer fraud cases than non-fraud cases.\n","\n","Correlation analysis showed no strong linear relationship between features and the target."]},{"cell_type":"markdown","metadata":{"id":"k9_CL8qYJpAA"},"source":["# **GitHub Link**\n","\n"]},{"cell_type":"markdown","source":["https://github.com/manidipa022/FRAUD_DETECTION_ML_Project"],"metadata":{"id":"uoF_tZlFycYk"}},{"cell_type":"markdown","metadata":{"id":"BFzG_l78JvTu"},"source":["# **Problem Statment**\n","\n","Objective: The goal is to build a supervised classification model to detect fraudulent transactions based on the provided credit card dataset. The key metrics to evaluate the model will be Precision, Recall, and F1-Score."]},{"cell_type":"markdown","metadata":{"id":"4XTIZadWKRme"},"source":["# **Let's Begin**"]},{"cell_type":"markdown","metadata":{"id":"1xhiiwffKXAt"},"source":["# **1. Know Your Data**"]},{"cell_type":"markdown","metadata":{"id":"rBRvi8YPKf6g"},"source":["# Import libraries"]},{"cell_type":"code","execution_count":39,"metadata":{"id":"RGggxsosJoW0","executionInfo":{"status":"ok","timestamp":1732478891563,"user_tz":-330,"elapsed":471,"user":{"displayName":"Pradip Kundu","userId":"12272573739765040367"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import classification_report, confusion_matrix"]},{"cell_type":"markdown","metadata":{"id":"TFU4ryKzLRTx"},"source":["# Dataset Loading"]},{"cell_type":"code","execution_count":40,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3948,"status":"ok","timestamp":1732478899644,"user":{"displayName":"Pradip Kundu","userId":"12272573739765040367"},"user_tz":-330},"id":"e4XOS0k_LyiN","outputId":"9c01ca8f-070c-467d-9af8-d22fb50c53aa"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":41,"metadata":{"id":"Mcd9lJxQkqpj","executionInfo":{"status":"ok","timestamp":1732478905837,"user_tz":-330,"elapsed":2619,"user":{"displayName":"Pradip Kundu","userId":"12272573739765040367"}}},"outputs":[],"source":["file_path='/content/drive/MyDrive/Colab Notebooks/Credit Card fraud detection.csv'\n","data=pd.read_csv(file_path)"]},{"cell_type":"markdown","metadata":{"id":"VwxXD1KrMPe_"},"source":["# Dataset First View"]},{"cell_type":"code","execution_count":42,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":256},"executionInfo":{"elapsed":466,"status":"ok","timestamp":1732478910958,"user":{"displayName":"Pradip Kundu","userId":"12272573739765040367"},"user_tz":-330},"id":"pwfozEYBML4r","outputId":"d54f9faa-a222-4f5b-a57d-c0639af37816"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Time        V1        V2        V3        V4        V5        V6        V7  \\\n","0   0.0 -1.359807 -0.072781  2.536347  1.378155 -0.338321  0.462388  0.239599   \n","1   0.0  1.191857  0.266151  0.166480  0.448154  0.060018 -0.082361 -0.078803   \n","2   1.0 -1.358354 -1.340163  1.773209  0.379780 -0.503198  1.800499  0.791461   \n","3   1.0 -0.966272 -0.185226  1.792993 -0.863291 -0.010309  1.247203  0.237609   \n","4   2.0 -1.158233  0.877737  1.548718  0.403034 -0.407193  0.095921  0.592941   \n","\n","         V8        V9  ...       V21       V22       V23       V24       V25  \\\n","0  0.098698  0.363787  ... -0.018307  0.277838 -0.110474  0.066928  0.128539   \n","1  0.085102 -0.255425  ... -0.225775 -0.638672  0.101288 -0.339846  0.167170   \n","2  0.247676 -1.514654  ...  0.247998  0.771679  0.909412 -0.689281 -0.327642   \n","3  0.377436 -1.387024  ... -0.108300  0.005274 -0.190321 -1.175575  0.647376   \n","4 -0.270533  0.817739  ... -0.009431  0.798278 -0.137458  0.141267 -0.206010   \n","\n","        V26       V27       V28  Amount  Class  \n","0 -0.189115  0.133558 -0.021053  149.62      0  \n","1  0.125895 -0.008983  0.014724    2.69      0  \n","2 -0.139097 -0.055353 -0.059752  378.66      0  \n","3 -0.221929  0.062723  0.061458  123.50      0  \n","4  0.502292  0.219422  0.215153   69.99      0  \n","\n","[5 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-6307af19-ed34-4b15-8d59-f66c4e023cf4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time</th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>V6</th>\n","      <th>V7</th>\n","      <th>V8</th>\n","      <th>V9</th>\n","      <th>...</th>\n","      <th>V21</th>\n","      <th>V22</th>\n","      <th>V23</th>\n","      <th>V24</th>\n","      <th>V25</th>\n","      <th>V26</th>\n","      <th>V27</th>\n","      <th>V28</th>\n","      <th>Amount</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>-1.359807</td>\n","      <td>-0.072781</td>\n","      <td>2.536347</td>\n","      <td>1.378155</td>\n","      <td>-0.338321</td>\n","      <td>0.462388</td>\n","      <td>0.239599</td>\n","      <td>0.098698</td>\n","      <td>0.363787</td>\n","      <td>...</td>\n","      <td>-0.018307</td>\n","      <td>0.277838</td>\n","      <td>-0.110474</td>\n","      <td>0.066928</td>\n","      <td>0.128539</td>\n","      <td>-0.189115</td>\n","      <td>0.133558</td>\n","      <td>-0.021053</td>\n","      <td>149.62</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0</td>\n","      <td>1.191857</td>\n","      <td>0.266151</td>\n","      <td>0.166480</td>\n","      <td>0.448154</td>\n","      <td>0.060018</td>\n","      <td>-0.082361</td>\n","      <td>-0.078803</td>\n","      <td>0.085102</td>\n","      <td>-0.255425</td>\n","      <td>...</td>\n","      <td>-0.225775</td>\n","      <td>-0.638672</td>\n","      <td>0.101288</td>\n","      <td>-0.339846</td>\n","      <td>0.167170</td>\n","      <td>0.125895</td>\n","      <td>-0.008983</td>\n","      <td>0.014724</td>\n","      <td>2.69</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>-1.358354</td>\n","      <td>-1.340163</td>\n","      <td>1.773209</td>\n","      <td>0.379780</td>\n","      <td>-0.503198</td>\n","      <td>1.800499</td>\n","      <td>0.791461</td>\n","      <td>0.247676</td>\n","      <td>-1.514654</td>\n","      <td>...</td>\n","      <td>0.247998</td>\n","      <td>0.771679</td>\n","      <td>0.909412</td>\n","      <td>-0.689281</td>\n","      <td>-0.327642</td>\n","      <td>-0.139097</td>\n","      <td>-0.055353</td>\n","      <td>-0.059752</td>\n","      <td>378.66</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>-0.966272</td>\n","      <td>-0.185226</td>\n","      <td>1.792993</td>\n","      <td>-0.863291</td>\n","      <td>-0.010309</td>\n","      <td>1.247203</td>\n","      <td>0.237609</td>\n","      <td>0.377436</td>\n","      <td>-1.387024</td>\n","      <td>...</td>\n","      <td>-0.108300</td>\n","      <td>0.005274</td>\n","      <td>-0.190321</td>\n","      <td>-1.175575</td>\n","      <td>0.647376</td>\n","      <td>-0.221929</td>\n","      <td>0.062723</td>\n","      <td>0.061458</td>\n","      <td>123.50</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2.0</td>\n","      <td>-1.158233</td>\n","      <td>0.877737</td>\n","      <td>1.548718</td>\n","      <td>0.403034</td>\n","      <td>-0.407193</td>\n","      <td>0.095921</td>\n","      <td>0.592941</td>\n","      <td>-0.270533</td>\n","      <td>0.817739</td>\n","      <td>...</td>\n","      <td>-0.009431</td>\n","      <td>0.798278</td>\n","      <td>-0.137458</td>\n","      <td>0.141267</td>\n","      <td>-0.206010</td>\n","      <td>0.502292</td>\n","      <td>0.219422</td>\n","      <td>0.215153</td>\n","      <td>69.99</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 31 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6307af19-ed34-4b15-8d59-f66c4e023cf4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6307af19-ed34-4b15-8d59-f66c4e023cf4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6307af19-ed34-4b15-8d59-f66c4e023cf4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cdd0c03b-4f88-45fd-bb70-cd8e180acc59\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cdd0c03b-4f88-45fd-bb70-cd8e180acc59')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cdd0c03b-4f88-45fd-bb70-cd8e180acc59 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data"}},"metadata":{},"execution_count":42}],"source":["data.head()"]},{"cell_type":"markdown","metadata":{"id":"5SdHvuokMcH_"},"source":["# Dataset Row and Column Count"]},{"cell_type":"code","execution_count":43,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1732478917248,"user":{"displayName":"Pradip Kundu","userId":"12272573739765040367"},"user_tz":-330},"id":"znb-_001MWWa","outputId":"63a2a5cf-bab5-4a6c-e951-54fee76fbee4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(284807, 31)"]},"metadata":{},"execution_count":43}],"source":["# Shape gives the Total number of rows and columns\n","data.shape"]},{"cell_type":"markdown","metadata":{"id":"ZzdxedUVMrGS"},"source":["# Dataset Information"]},{"cell_type":"code","execution_count":44,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":475,"status":"ok","timestamp":1732478922042,"user":{"displayName":"Pradip Kundu","userId":"12272573739765040367"},"user_tz":-330},"id":"683-BlY_MkrZ","outputId":"ea834ca3-cb57-4c04-fcee-9f84cbe7c677"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 284807 entries, 0 to 284806\n","Data columns (total 31 columns):\n"," #   Column  Non-Null Count   Dtype  \n","---  ------  --------------   -----  \n"," 0   Time    284807 non-null  float64\n"," 1   V1      284807 non-null  float64\n"," 2   V2      284807 non-null  float64\n"," 3   V3      284807 non-null  float64\n"," 4   V4      284807 non-null  float64\n"," 5   V5      284807 non-null  float64\n"," 6   V6      284807 non-null  float64\n"," 7   V7      284807 non-null  float64\n"," 8   V8      284807 non-null  float64\n"," 9   V9      284807 non-null  float64\n"," 10  V10     284807 non-null  float64\n"," 11  V11     284807 non-null  float64\n"," 12  V12     284807 non-null  float64\n"," 13  V13     284807 non-null  float64\n"," 14  V14     284807 non-null  float64\n"," 15  V15     284807 non-null  float64\n"," 16  V16     284807 non-null  float64\n"," 17  V17     284807 non-null  float64\n"," 18  V18     284807 non-null  float64\n"," 19  V19     284807 non-null  float64\n"," 20  V20     284807 non-null  float64\n"," 21  V21     284807 non-null  float64\n"," 22  V22     284807 non-null  float64\n"," 23  V23     284807 non-null  float64\n"," 24  V24     284807 non-null  float64\n"," 25  V25     284807 non-null  float64\n"," 26  V26     284807 non-null  float64\n"," 27  V27     284807 non-null  float64\n"," 28  V28     284807 non-null  float64\n"," 29  Amount  284807 non-null  float64\n"," 30  Class   284807 non-null  int64  \n","dtypes: float64(30), int64(1)\n","memory usage: 67.4 MB\n"]}],"source":["# Dataset information\n","data.info()"]},{"cell_type":"markdown","metadata":{"id":"bKrMdMJLNDN-"},"source":["# Duplicate Values"]},{"cell_type":"code","execution_count":45,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":943,"status":"ok","timestamp":1732478928095,"user":{"displayName":"Pradip Kundu","userId":"12272573739765040367"},"user_tz":-330},"id":"HBwlJHKdMx1V","outputId":"8a4a012e-74a3-4795-e451-eee86615857e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["1081"]},"metadata":{},"execution_count":45}],"source":["# Dataset Duplicate value count\n","data.duplicated().sum()"]},{"cell_type":"code","execution_count":46,"metadata":{"id":"J7JOAEpTOUiY","executionInfo":{"status":"ok","timestamp":1732478931093,"user_tz":-330,"elapsed":877,"user":{"displayName":"Pradip Kundu","userId":"12272573739765040367"}}},"outputs":[],"source":["# Drop duplicates\n","data.drop_duplicates(inplace=True)"]},{"cell_type":"markdown","metadata":{"id":"YCqJG0y6NM_G"},"source":["Missing Values/Null Values"]},{"cell_type":"code","execution_count":47,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":736,"status":"ok","timestamp":1732478935832,"user":{"displayName":"Pradip Kundu","userId":"12272573739765040367"},"user_tz":-330},"id":"Y8ak0Ly0NKbi","outputId":"c9c734ea-dd45-47cb-bce3-a202f5fa2a92"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Time      0\n","V1        0\n","V2        0\n","V3        0\n","V4        0\n","V5        0\n","V6        0\n","V7        0\n","V8        0\n","V9        0\n","V10       0\n","V11       0\n","V12       0\n","V13       0\n","V14       0\n","V15       0\n","V16       0\n","V17       0\n","V18       0\n","V19       0\n","V20       0\n","V21       0\n","V22       0\n","V23       0\n","V24       0\n","V25       0\n","V26       0\n","V27       0\n","V28       0\n","Amount    0\n","Class     0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Time</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V1</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V2</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V3</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V4</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V5</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V6</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V7</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V8</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V9</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V10</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V11</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V12</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V13</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V14</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V15</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V16</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V17</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V18</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V19</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V20</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V21</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V22</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V23</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V24</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V25</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V26</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V27</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>V28</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Amount</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Class</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":47}],"source":["# Missing/Null Values count\n","data.isnull().sum()"]},{"cell_type":"code","execution_count":48,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":494},"executionInfo":{"elapsed":15173,"status":"ok","timestamp":1732478954173,"user":{"displayName":"Pradip Kundu","userId":"12272573739765040367"},"user_tz":-330},"id":"AgTKZvVrNWLg","outputId":"e4dc7d12-afd8-45f9-c176-ba8d9f8b9e18"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":48},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# Visualizing missing values\n","sns.heatmap(data.isnull(),cbar=False)"]},{"cell_type":"markdown","metadata":{"id":"S6GL7ACfOobw"},"source":["# What did I know about Dataset?\n","\n","\n","\n","*   My dataset have 284807 rows and 31 columns.my dataset does not contains any categorical column.\n","*   It has 0 null values and 1081 duplicate values.\n","\n"]},{"cell_type":"markdown","metadata":{"id":"NP_wCjTfPOse"},"source":["# **2. Understanding Variables**"]},{"cell_type":"code","execution_count":49,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":477,"status":"ok","timestamp":1732478960384,"user":{"displayName":"Pradip Kundu","userId":"12272573739765040367"},"user_tz":-330},"id":"MS61yrsXOBMQ","outputId":"7fba98e0-a65d-4a9a-fbd4-88bffeb1acf4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Time', 'V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10',\n","       'V11', 'V12', 'V13', 'V14', 'V15', 'V16', 'V17', 'V18', 'V19', 'V20',\n","       'V21', 'V22', 'V23', 'V24', 'V25', 'V26', 'V27', 'V28', 'Amount',\n","       'Class'],\n","      dtype='object')"]},"metadata":{},"execution_count":49}],"source":["# Dataset columns\n","data.columns"]},{"cell_type":"code","execution_count":50,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":350},"executionInfo":{"elapsed":482,"status":"ok","timestamp":1732478963408,"user":{"displayName":"Pradip Kundu","userId":"12272573739765040367"},"user_tz":-330},"id":"kdlhyKDWPZq7","outputId":"36249c45-7680-47d4-cc34-489da7f079ed"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                Time             V1             V2             V3  \\\n","count  283726.000000  283726.000000  283726.000000  283726.000000   \n","mean    94811.077600       0.005917      -0.004135       0.001613   \n","std     47481.047891       1.948026       1.646703       1.508682   \n","min         0.000000     -56.407510     -72.715728     -48.325589   \n","25%     54204.750000      -0.915951      -0.600321      -0.889682   \n","50%     84692.500000       0.020384       0.063949       0.179963   \n","75%    139298.000000       1.316068       0.800283       1.026960   \n","max    172792.000000       2.454930      22.057729       9.382558   \n","\n","                  V4             V5             V6             V7  \\\n","count  283726.000000  283726.000000  283726.000000  283726.000000   \n","mean       -0.002966       0.001828      -0.001139       0.001801   \n","std         1.414184       1.377008       1.331931       1.227664   \n","min        -5.683171    -113.743307     -26.160506     -43.557242   \n","25%        -0.850134      -0.689830      -0.769031      -0.552509   \n","50%        -0.022248      -0.053468      -0.275168       0.040859   \n","75%         0.739647       0.612218       0.396792       0.570474   \n","max        16.875344      34.801666      73.301626     120.589494   \n","\n","                  V8             V9  ...            V21            V22  \\\n","count  283726.000000  283726.000000  ...  283726.000000  283726.000000   \n","mean       -0.000854      -0.001596  ...      -0.000371      -0.000015   \n","std         1.179054       1.095492  ...       0.723909       0.724550   \n","min       -73.216718     -13.434066  ...     -34.830382     -10.933144   \n","25%        -0.208828      -0.644221  ...      -0.228305      -0.542700   \n","50%         0.021898      -0.052596  ...      -0.029441       0.006675   \n","75%         0.325704       0.595977  ...       0.186194       0.528245   \n","max        20.007208      15.594995  ...      27.202839      10.503090   \n","\n","                 V23            V24            V25            V26  \\\n","count  283726.000000  283726.000000  283726.000000  283726.000000   \n","mean        0.000198       0.000214      -0.000232       0.000149   \n","std         0.623702       0.605627       0.521220       0.482053   \n","min       -44.807735      -2.836627     -10.295397      -2.604551   \n","25%        -0.161703      -0.354453      -0.317485      -0.326763   \n","50%        -0.011159       0.041016       0.016278      -0.052172   \n","75%         0.147748       0.439738       0.350667       0.240261   \n","max        22.528412       4.584549       7.519589       3.517346   \n","\n","                 V27            V28         Amount          Class  \n","count  283726.000000  283726.000000  283726.000000  283726.000000  \n","mean        0.001763       0.000547      88.472687       0.001667  \n","std         0.395744       0.328027     250.399437       0.040796  \n","min       -22.565679     -15.430084       0.000000       0.000000  \n","25%        -0.070641      -0.052818       5.600000       0.000000  \n","50%         0.001479       0.011288      22.000000       0.000000  \n","75%         0.091208       0.078276      77.510000       0.000000  \n","max        31.612198      33.847808   25691.160000       1.000000  \n","\n","[8 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-f091e84d-0faa-47d3-8194-83eb44de69e4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time</th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>V6</th>\n","      <th>V7</th>\n","      <th>V8</th>\n","      <th>V9</th>\n","      <th>...</th>\n","      <th>V21</th>\n","      <th>V22</th>\n","      <th>V23</th>\n","      <th>V24</th>\n","      <th>V25</th>\n","      <th>V26</th>\n","      <th>V27</th>\n","      <th>V28</th>\n","      <th>Amount</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>283726.000000</td>\n","      <td>283726.000000</td>\n","      <td>283726.000000</td>\n","      <td>283726.000000</td>\n","      <td>283726.000000</td>\n","      <td>283726.000000</td>\n","      <td>283726.000000</td>\n","      <td>283726.000000</td>\n","      <td>283726.000000</td>\n","      <td>283726.000000</td>\n","      <td>...</td>\n","      <td>283726.000000</td>\n","      <td>283726.000000</td>\n","      <td>283726.000000</td>\n","      <td>283726.000000</td>\n","      <td>283726.000000</td>\n","      <td>283726.000000</td>\n","      <td>283726.000000</td>\n","      <td>283726.000000</td>\n","      <td>283726.000000</td>\n","      <td>283726.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>94811.077600</td>\n","      <td>0.005917</td>\n","      <td>-0.004135</td>\n","      <td>0.001613</td>\n","      <td>-0.002966</td>\n","      <td>0.001828</td>\n","      <td>-0.001139</td>\n","      <td>0.001801</td>\n","      <td>-0.000854</td>\n","      <td>-0.001596</td>\n","      <td>...</td>\n","      <td>-0.000371</td>\n","      <td>-0.000015</td>\n","      <td>0.000198</td>\n","      <td>0.000214</td>\n","      <td>-0.000232</td>\n","      <td>0.000149</td>\n","      <td>0.001763</td>\n","      <td>0.000547</td>\n","      <td>88.472687</td>\n","      <td>0.001667</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>47481.047891</td>\n","      <td>1.948026</td>\n","      <td>1.646703</td>\n","      <td>1.508682</td>\n","      <td>1.414184</td>\n","      <td>1.377008</td>\n","      <td>1.331931</td>\n","      <td>1.227664</td>\n","      <td>1.179054</td>\n","      <td>1.095492</td>\n","      <td>...</td>\n","      <td>0.723909</td>\n","      <td>0.724550</td>\n","      <td>0.623702</td>\n","      <td>0.605627</td>\n","      <td>0.521220</td>\n","      <td>0.482053</td>\n","      <td>0.395744</td>\n","      <td>0.328027</td>\n","      <td>250.399437</td>\n","      <td>0.040796</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>-56.407510</td>\n","      <td>-72.715728</td>\n","      <td>-48.325589</td>\n","      <td>-5.683171</td>\n","      <td>-113.743307</td>\n","      <td>-26.160506</td>\n","      <td>-43.557242</td>\n","      <td>-73.216718</td>\n","      <td>-13.434066</td>\n","      <td>...</td>\n","      <td>-34.830382</td>\n","      <td>-10.933144</td>\n","      <td>-44.807735</td>\n","      <td>-2.836627</td>\n","      <td>-10.295397</td>\n","      <td>-2.604551</td>\n","      <td>-22.565679</td>\n","      <td>-15.430084</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>54204.750000</td>\n","      <td>-0.915951</td>\n","      <td>-0.600321</td>\n","      <td>-0.889682</td>\n","      <td>-0.850134</td>\n","      <td>-0.689830</td>\n","      <td>-0.769031</td>\n","      <td>-0.552509</td>\n","      <td>-0.208828</td>\n","      <td>-0.644221</td>\n","      <td>...</td>\n","      <td>-0.228305</td>\n","      <td>-0.542700</td>\n","      <td>-0.161703</td>\n","      <td>-0.354453</td>\n","      <td>-0.317485</td>\n","      <td>-0.326763</td>\n","      <td>-0.070641</td>\n","      <td>-0.052818</td>\n","      <td>5.600000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>84692.500000</td>\n","      <td>0.020384</td>\n","      <td>0.063949</td>\n","      <td>0.179963</td>\n","      <td>-0.022248</td>\n","      <td>-0.053468</td>\n","      <td>-0.275168</td>\n","      <td>0.040859</td>\n","      <td>0.021898</td>\n","      <td>-0.052596</td>\n","      <td>...</td>\n","      <td>-0.029441</td>\n","      <td>0.006675</td>\n","      <td>-0.011159</td>\n","      <td>0.041016</td>\n","      <td>0.016278</td>\n","      <td>-0.052172</td>\n","      <td>0.001479</td>\n","      <td>0.011288</td>\n","      <td>22.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>139298.000000</td>\n","      <td>1.316068</td>\n","      <td>0.800283</td>\n","      <td>1.026960</td>\n","      <td>0.739647</td>\n","      <td>0.612218</td>\n","      <td>0.396792</td>\n","      <td>0.570474</td>\n","      <td>0.325704</td>\n","      <td>0.595977</td>\n","      <td>...</td>\n","      <td>0.186194</td>\n","      <td>0.528245</td>\n","      <td>0.147748</td>\n","      <td>0.439738</td>\n","      <td>0.350667</td>\n","      <td>0.240261</td>\n","      <td>0.091208</td>\n","      <td>0.078276</td>\n","      <td>77.510000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>172792.000000</td>\n","      <td>2.454930</td>\n","      <td>22.057729</td>\n","      <td>9.382558</td>\n","      <td>16.875344</td>\n","      <td>34.801666</td>\n","      <td>73.301626</td>\n","      <td>120.589494</td>\n","      <td>20.007208</td>\n","      <td>15.594995</td>\n","      <td>...</td>\n","      <td>27.202839</td>\n","      <td>10.503090</td>\n","      <td>22.528412</td>\n","      <td>4.584549</td>\n","      <td>7.519589</td>\n","      <td>3.517346</td>\n","      <td>31.612198</td>\n","      <td>33.847808</td>\n","      <td>25691.160000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows Ã— 31 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f091e84d-0faa-47d3-8194-83eb44de69e4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f091e84d-0faa-47d3-8194-83eb44de69e4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f091e84d-0faa-47d3-8194-83eb44de69e4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ff1637e7-41cd-4921-a585-04474c4574ef\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ff1637e7-41cd-4921-a585-04474c4574ef')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ff1637e7-41cd-4921-a585-04474c4574ef button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":50}],"source":["# Using Describe method which gives a quick statical summary of dataset\n","data.describe()"]},{"cell_type":"markdown","metadata":{"id":"PukvxFuUQQ6k"},"source":["# Check Unique Values fro each variable"]},{"cell_type":"code","execution_count":51,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":964,"status":"ok","timestamp":1732478969477,"user":{"displayName":"Pradip Kundu","userId":"12272573739765040367"},"user_tz":-330},"id":"JVxcEcsvPp4g","outputId":"8404ca6c-b24e-476c-aac7-3b629139c3ca"},"outputs":[{"output_type":"stream","name":"stdout","text":["No. of unique values in  Time is 124592 .\n","No. of unique values in  V1 is 275653 .\n","No. of unique values in  V2 is 275655 .\n","No. of unique values in  V3 is 275657 .\n","No. of unique values in  V4 is 275654 .\n","No. of unique values in  V5 is 275657 .\n","No. of unique values in  V6 is 275652 .\n","No. of unique values in  V7 is 275651 .\n","No. of unique values in  V8 is 275643 .\n","No. of unique values in  V9 is 275656 .\n","No. of unique values in  V10 is 275646 .\n","No. of unique values in  V11 is 275648 .\n","No. of unique values in  V12 is 275654 .\n","No. of unique values in  V13 is 275657 .\n","No. of unique values in  V14 is 275653 .\n","No. of unique values in  V15 is 275653 .\n","No. of unique values in  V16 is 275645 .\n","No. of unique values in  V17 is 275646 .\n","No. of unique values in  V18 is 275655 .\n","No. of unique values in  V19 is 275645 .\n","No. of unique values in  V20 is 275632 .\n","No. of unique values in  V21 is 275617 .\n","No. of unique values in  V22 is 275644 .\n","No. of unique values in  V23 is 275611 .\n","No. of unique values in  V24 is 275645 .\n","No. of unique values in  V25 is 275640 .\n","No. of unique values in  V26 is 275647 .\n","No. of unique values in  V27 is 275597 .\n","No. of unique values in  V28 is 275558 .\n","No. of unique values in  Amount is 32767 .\n","No. of unique values in  Class is 2 .\n"]}],"source":["for i in data.columns.tolist():\n","  print(\"No. of unique values in \",i,\"is\",data[i].nunique(),\".\")"]},{"cell_type":"markdown","metadata":{"id":"Z1N8uIBsRfYf"},"source":["# **4. Visualizing Data:**\n","Use visualizations to understand the data better (e.g., correlation heatmap, distribution plots)."]},{"cell_type":"code","execution_count":52,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":3545,"status":"ok","timestamp":1732478979199,"user":{"displayName":"Pradip Kundu","userId":"12272573739765040367"},"user_tz":-330},"id":"5PvKpnKzQjAJ","outputId":"8426fcaf-dacf-4630-8b96-60431eb664c2"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["\n","# Correlation heatmap\n","plt.figure(figsize=(12,8))\n","sns.heatmap(data.corr(), annot=False, cmap='coolwarm')\n","plt.show()\n","\n","# Distribution of the 'Amount' feature\n","sns.histplot(data['Amount'], bins=50, kde=True)\n","plt.show()\n"]},{"cell_type":"code","execution_count":53,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":680},"executionInfo":{"elapsed":1002,"status":"ok","timestamp":1732478981958,"user":{"displayName":"Pradip Kundu","userId":"12272573739765040367"},"user_tz":-330},"id":"OzcplqRKRv2Q","outputId":"ef1dad5c-05fe-4862-ae1b-1bc68efa6b34"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# Detect outliers by sing box plot\n","plt.figure(figsize=(12,8))\n","sns.boxplot(data=data,y='Amount')\n","plt.title('Outliers in Amount')\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"iKCwWLezVgdg"},"source":["# **5. Model Selection, Training, & Evaluation**\n","**Model Selection:**\n","\n","Given the classification task\n","\n","**Splitting the Data:**\n","\n","Split the data into training and testing sets"]},{"cell_type":"code","execution_count":54,"metadata":{"id":"4YNN74O_Sz_G","executionInfo":{"status":"ok","timestamp":1732478989403,"user_tz":-330,"elapsed":444,"user":{"displayName":"Pradip Kundu","userId":"12272573739765040367"}}},"outputs":[],"source":["# splitting the Dataset into training and testing dataset\n","from sklearn.model_selection import train_test_split\n","X = data.drop(columns=['Class'])\n","y = data['Class']\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42, stratify=y)\n"]},{"cell_type":"markdown","metadata":{"id":"i4py0m3LPfSP"},"source":["# **6. Training The Model**"]},{"cell_type":"markdown","metadata":{"id":"_jEOrvwvPnoi"},"source":["Example using Logistic Regression:"]},{"cell_type":"code","execution_count":55,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":219},"executionInfo":{"elapsed":5536,"status":"ok","timestamp":1732479000229,"user":{"displayName":"Pradip Kundu","userId":"12272573739765040367"},"user_tz":-330},"id":"7Q8WOgXPWV7X","outputId":"e5441aec-2fb5-486d-ada8-1924eae5c481"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]},{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"],"text/html":["<style>#sk-container-id-2 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: black;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-2 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-2 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-2 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-2 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-2 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-2 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-2 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-2 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-2 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-2 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-2 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: block;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","}\n","\n","#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"â–¸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-2 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"â–¾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-2 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-2 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-2 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-2 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-2 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 1ex;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-2 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-2 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-2 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LogisticRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LogisticRegression.html\">?<span>Documentation for LogisticRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LogisticRegression()</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":55}],"source":["from sklearn.linear_model import LogisticRegression\n","\n","model = LogisticRegression()\n","model.fit(X_train, y_train)\n"]},{"cell_type":"markdown","metadata":{"id":"4lxCoCN5P0Qz"},"source":["# **7. Evaluation:**\n","\n","Use metrics like Precision, Recall, and F1-Score to evaluate the model."]},{"cell_type":"code","execution_count":56,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":473,"status":"ok","timestamp":1732479005180,"user":{"displayName":"Pradip Kundu","userId":"12272573739765040367"},"user_tz":-330},"id":"QdxecsIxPtkw","outputId":"ee37b579-ce1f-4e59-c580-47914566393d"},"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00     56651\n","           1       0.70      0.66      0.68        95\n","\n","    accuracy                           1.00     56746\n","   macro avg       0.85      0.83      0.84     56746\n","weighted avg       1.00      1.00      1.00     56746\n","\n","[[56624    27]\n"," [   32    63]]\n"]}],"source":["from sklearn.metrics import classification_report, confusion_matrix\n","\n","# Make predictions\n","y_pred = model.predict(X_test)\n","\n","# Evaluate the model\n","print(classification_report(y_test, y_pred))\n","\n","# Confusion Matrix\n","print(confusion_matrix(y_test, y_pred))\n"]},{"cell_type":"code","execution_count":58,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"euZ72Wh8P9Q-","outputId":"86641f7f-b482-4087-882f-9b8fffd4eaff","executionInfo":{"status":"ok","timestamp":1732479496772,"user_tz":-330,"elapsed":313435,"user":{"displayName":"Pradip Kundu","userId":"12272573739765040367"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["[[56650     1]\n"," [   25    70]]\n","              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00     56651\n","           1       0.99      0.74      0.84        95\n","\n","    accuracy                           1.00     56746\n","   macro avg       0.99      0.87      0.92     56746\n","weighted avg       1.00      1.00      1.00     56746\n","\n"]}],"source":["from sklearn.ensemble import RandomForestClassifier\n","\n","# Create and train the model\n","model = RandomForestClassifier()\n","model.fit(X_train, y_train)\n","\n","# Make predictions\n","y_pred = model.predict(X_test)\n","\n","# Evaluate the model\n","print(confusion_matrix(y_test, y_pred))\n","print(classification_report(y_test, y_pred))"]},{"cell_type":"markdown","metadata":{"id":"O0Lm38s9Tpbr"},"source":["# **Conclusion :**"]},{"cell_type":"markdown","metadata":{"id":"6tlRRo2rT_gZ"},"source":["**Conclusion:**The Random Forest model performed well on this task, especially in terms of precision and recall. This balance is crucial for fraud detection systems where missing frauds (false negatives) can be costly. However, more sophisticated models like Gradient Boosting or deep learning methods could further improve performance if needed."]}],"metadata":{"colab":{"provenance":[{"file_id":"1mqhHhNIHzFS10LW2O_8sacRwa2BVQMo_","timestamp":1732445841823},{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1725463243902}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}